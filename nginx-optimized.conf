# 🚀 Nginx 高性能优化配置 - Dreamle Mining Platform
# 针对币安钱包等 DApp 浏览器优化

server {
    server_name dreamlewebai.com www.dreamlewebai.com;

    # ==================== 性能优化配置 ====================
    
    # 1. 启用 HTTP/2（更快的多路复用）
    listen 443 ssl http2;
    
    # 2. SSL 优化（使用 Let's Encrypt 默认配置）
    ssl_certificate /etc/letsencrypt/live/dreamlewebai.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dreamlewebai.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # 3. Gzip 压缩配置（最大化压缩）
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 9;  # 提升到最高压缩级别
    gzip_types 
        text/plain 
        text/css 
        text/xml 
        text/javascript 
        application/json 
        application/javascript 
        application/x-javascript
        application/xml 
        application/xml+rss 
        application/rss+xml 
        font/truetype 
        font/opentype 
        application/vnd.ms-fontobject 
        image/svg+xml
        image/x-icon;
    gzip_min_length 256;  # 降低最小压缩大小
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    
    # 4. Brotli 压缩（比 Gzip 更好，如果已安装）
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss;
    
    # 5. 缓存配置 - 完全禁用
    # 禁用文件缓存（确保用户总是获取最新文件）
    open_file_cache off;
    
    # 6. 连接优化
    keepalive_timeout 65;
    keepalive_requests 100;
    
    # 7. 缓冲区优化
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # 8. TCP 优化
    tcp_nopush on;
    tcp_nodelay on;
    
    # 9. 安全头部
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # ==================== 路由配置 ====================
    
    # NFT Metadata API - 动态路由
    location ~ ^/api/metadata/(\d+)\.json$ {
        root /root/dreamle-mining;
        try_files $uri @php_metadata;

        # CORS 头部
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type" always;

        # 缓存 metadata（1小时）
        add_header Cache-Control "public, max-age=3600" always;
    }

    # PHP 处理 metadata（如果静态文件不存在）
    location @php_metadata {
        root /root/dreamle-mining;
        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME /root/dreamle-mining/api/nft-metadata.php;
        include fastcgi_params;

        # CORS 头部
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type" always;

        # 缓存 metadata（1小时）
        add_header Cache-Control "public, max-age=3600" always;
    }

    # 主页面 - 完全禁用缓存
    location / {
        root /root/dreamle-mining;
        index index.html platform.html;
        try_files $uri $uri/ =404;

        # CORS 头部
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;

        # 完全禁用缓存
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;

        # 禁用 ETag（防止条件请求缓存）
        etag off;
        if_modified_since off;
    }

    # JS/CSS 文件 - 完全禁用缓存
    location ~* \.(js|css)$ {
        root /root/dreamle-mining;

        # CORS 头部
        add_header Access-Control-Allow-Origin * always;

        # 完全禁用缓存
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;

        # 禁用 ETag
        etag off;
        if_modified_since off;

        # 保留 Gzip 压缩以提升传输速度
        gzip_static on;
    }

    # 图片资源 - 完全禁用缓存
    location ~* \.(png|jpg|jpeg|gif|ico|svg|webp)$ {
        root /root/dreamle-mining;

        # CORS 头部
        add_header Access-Control-Allow-Origin * always;

        # 完全禁用缓存
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;

        # 禁用 ETag
        etag off;
        if_modified_since off;

        # 不记录图片访问日志（保持性能）
        access_log off;
    }

    # 字体文件 - 完全禁用缓存
    location ~* \.(woff|woff2|ttf|otf|eot)$ {
        root /root/dreamle-mining;

        # CORS 头部
        add_header Access-Control-Allow-Origin * always;

        # 完全禁用缓存
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;

        # 禁用 ETag
        etag off;
        if_modified_since off;

        access_log off;
    }

    # JSON 配置文件 - 完全禁用缓存
    location ~* \.json$ {
        root /root/dreamle-mining;

        # CORS 头部
        add_header Access-Control-Allow-Origin * always;

        # 完全禁用缓存
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;

        # 禁用 ETag
        etag off;
        if_modified_since off;
    }
    
    # 禁止访问隐藏文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 禁止访问备份文件
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # ==================== 日志配置 ====================
    
    # 访问日志（可选：关闭以提升性能）
    access_log /var/log/nginx/dreamle-access.log;
    error_log /var/log/nginx/dreamle-error.log warn;
    
    # 如果要最大化性能，可以关闭访问日志：
    # access_log off;
}

# HTTP 重定向到 HTTPS
server {
    listen 80;
    server_name dreamlewebai.com www.dreamlewebai.com;
    
    # 强制 HTTPS
    return 301 https://$host$request_uri;
}

